1702249093
waR3U4bTeM%3A7a2cdb4601c6be66faf2604788ece655-025646af8ca0a505c00916e20d131494
s:19004:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjAyNTY0NmFmOGNhMGE1MDVjMDA5MTZlMjBkMTMxNDk0IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTI6InNlY3VyaXR5LnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjYwOiJ2ZW5kb3Ivc3ltZm9ueS9zZWN1cml0eS1idW5kbGUvUmVzb3VyY2VzL2NvbmZpZy9zZWN1cml0eS5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjEzMDI5OiI8P3BocAoKLyoKICogVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIFN5bWZvbnkgcGFja2FnZS4KICoKICogKGMpIEZhYmllbiBQb3RlbmNpZXIgPGZhYmllbkBzeW1mb255LmNvbT4KICoKICogRm9yIHRoZSBmdWxsIGNvcHlyaWdodCBhbmQgbGljZW5zZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpZXcgdGhlIExJQ0VOU0UKICogZmlsZSB0aGF0IHdhcyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgc291cmNlIGNvZGUuCiAqLwoKbmFtZXNwYWNlIFN5bWZvbnlcQ29tcG9uZW50XERlcGVuZGVuY3lJbmplY3Rpb25cTG9hZGVyXENvbmZpZ3VyYXRvcjsKCnVzZSBTeW1mb255XEJ1bmRsZVxTZWN1cml0eUJ1bmRsZVxDYWNoZVdhcm1lclxFeHByZXNzaW9uQ2FjaGVXYXJtZXI7CnVzZSBTeW1mb255XEJ1bmRsZVxTZWN1cml0eUJ1bmRsZVxFdmVudExpc3RlbmVyXEZpcmV3YWxsTGlzdGVuZXI7CnVzZSBTeW1mb255XEJ1bmRsZVxTZWN1cml0eUJ1bmRsZVxTZWN1cml0eTsKdXNlIFN5bWZvbnlcQnVuZGxlXFNlY3VyaXR5QnVuZGxlXFNlY3VyaXR5XEZpcmV3YWxsQ29uZmlnOwp1c2UgU3ltZm9ueVxCdW5kbGVcU2VjdXJpdHlCdW5kbGVcU2VjdXJpdHlcRmlyZXdhbGxDb250ZXh0Owp1c2UgU3ltZm9ueVxCdW5kbGVcU2VjdXJpdHlCdW5kbGVcU2VjdXJpdHlcRmlyZXdhbGxNYXA7CnVzZSBTeW1mb255XEJ1bmRsZVxTZWN1cml0eUJ1bmRsZVxTZWN1cml0eVxMYXp5RmlyZXdhbGxDb250ZXh0Owp1c2UgU3ltZm9ueVxDb21wb25lbnRcRXhwcmVzc2lvbkxhbmd1YWdlXEV4cHJlc3Npb25MYW5ndWFnZSBhcyBCYXNlRXhwcmVzc2lvbkxhbmd1YWdlOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcTGRhcFxTZWN1cml0eVxMZGFwVXNlclByb3ZpZGVyOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcU2VjdXJpdHlcQ29yZVxBdXRoZW50aWNhdGlvblxBdXRoZW50aWNhdGlvblRydXN0UmVzb2x2ZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxTZWN1cml0eVxDb3JlXEF1dGhlbnRpY2F0aW9uXFRva2VuXFN0b3JhZ2VcVG9rZW5TdG9yYWdlOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcU2VjdXJpdHlcQ29yZVxBdXRoZW50aWNhdGlvblxUb2tlblxTdG9yYWdlXFRva2VuU3RvcmFnZUludGVyZmFjZTsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XFNlY3VyaXR5XENvcmVcQXV0aGVudGljYXRpb25cVG9rZW5cU3RvcmFnZVxVc2FnZVRyYWNraW5nVG9rZW5TdG9yYWdlOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcU2VjdXJpdHlcQ29yZVxBdXRob3JpemF0aW9uXEFjY2Vzc0RlY2lzaW9uTWFuYWdlcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XFNlY3VyaXR5XENvcmVcQXV0aG9yaXphdGlvblxBY2Nlc3NEZWNpc2lvbk1hbmFnZXJJbnRlcmZhY2U7CnVzZSBTeW1mb255XENvbXBvbmVudFxTZWN1cml0eVxDb3JlXEF1dGhvcml6YXRpb25cQXV0aG9yaXphdGlvbkNoZWNrZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxTZWN1cml0eVxDb3JlXEF1dGhvcml6YXRpb25cQXV0aG9yaXphdGlvbkNoZWNrZXJJbnRlcmZhY2U7CnVzZSBTeW1mb255XENvbXBvbmVudFxTZWN1cml0eVxDb3JlXEF1dGhvcml6YXRpb25cRXhwcmVzc2lvbkxhbmd1YWdlOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcU2VjdXJpdHlcQ29yZVxBdXRob3JpemF0aW9uXFZvdGVyXEF1dGhlbnRpY2F0ZWRWb3RlcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XFNlY3VyaXR5XENvcmVcQXV0aG9yaXphdGlvblxWb3RlclxFeHByZXNzaW9uVm90ZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxTZWN1cml0eVxDb3JlXEF1dGhvcml6YXRpb25cVm90ZXJcUm9sZUhpZXJhcmNoeVZvdGVyOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcU2VjdXJpdHlcQ29yZVxBdXRob3JpemF0aW9uXFZvdGVyXFJvbGVWb3RlcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XFNlY3VyaXR5XENvcmVcUm9sZVxSb2xlSGllcmFyY2h5Owp1c2UgU3ltZm9ueVxDb21wb25lbnRcU2VjdXJpdHlcQ29yZVxSb2xlXFJvbGVIaWVyYXJjaHlJbnRlcmZhY2U7CnVzZSBTeW1mb255XENvbXBvbmVudFxTZWN1cml0eVxDb3JlXFNlY3VyaXR5IGFzIExlZ2FjeVNlY3VyaXR5Owp1c2UgU3ltZm9ueVxDb21wb25lbnRcU2VjdXJpdHlcQ29yZVxVc2VyXENoYWluVXNlclByb3ZpZGVyOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcU2VjdXJpdHlcQ29yZVxVc2VyXEluTWVtb3J5VXNlckNoZWNrZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxTZWN1cml0eVxDb3JlXFVzZXJcSW5NZW1vcnlVc2VyUHJvdmlkZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxTZWN1cml0eVxDb3JlXFVzZXJcTWlzc2luZ1VzZXJQcm92aWRlcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XFNlY3VyaXR5XENvcmVcVmFsaWRhdG9yXENvbnN0cmFpbnRzXFVzZXJQYXNzd29yZFZhbGlkYXRvcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XFNlY3VyaXR5XEh0dHBcQXV0aGVudGljYXRpb25cQXV0aGVudGljYXRpb25VdGlsczsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XFNlY3VyaXR5XEh0dHBcQ29udHJvbGxlclxVc2VyVmFsdWVSZXNvbHZlcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XFNlY3VyaXR5XEh0dHBcRXZlbnRMaXN0ZW5lclxJc0dyYW50ZWRBdHRyaWJ1dGVMaXN0ZW5lcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XFNlY3VyaXR5XEh0dHBcRmlyZXdhbGw7CnVzZSBTeW1mb255XENvbXBvbmVudFxTZWN1cml0eVxIdHRwXEZpcmV3YWxsTWFwSW50ZXJmYWNlOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcU2VjdXJpdHlcSHR0cFxIdHRwVXRpbHM7CnVzZSBTeW1mb255XENvbXBvbmVudFxTZWN1cml0eVxIdHRwXEltcGVyc29uYXRlXEltcGVyc29uYXRlVXJsR2VuZXJhdG9yOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcU2VjdXJpdHlcSHR0cFxMb2dvdXRcTG9nb3V0VXJsR2VuZXJhdG9yOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcU2VjdXJpdHlcSHR0cFxTZXNzaW9uXFNlc3Npb25BdXRoZW50aWNhdGlvblN0cmF0ZWd5Owp1c2UgU3ltZm9ueVxDb21wb25lbnRcU2VjdXJpdHlcSHR0cFxTZXNzaW9uXFNlc3Npb25BdXRoZW50aWNhdGlvblN0cmF0ZWd5SW50ZXJmYWNlOwoKcmV0dXJuIHN0YXRpYyBmdW5jdGlvbiAoQ29udGFpbmVyQ29uZmlndXJhdG9yICRjb250YWluZXIpIHsKICAgICRjb250YWluZXItPnBhcmFtZXRlcnMoKQogICAgICAgIC0+c2V0KCdzZWN1cml0eS5yb2xlX2hpZXJhcmNoeS5yb2xlcycsIFtdKQogICAgOwoKICAgICRjb250YWluZXItPnNlcnZpY2VzKCkKICAgICAgICAtPnNldCgnc2VjdXJpdHkuYXV0aG9yaXphdGlvbl9jaGVja2VyJywgQXV0aG9yaXphdGlvbkNoZWNrZXI6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgc2VydmljZSgnc2VjdXJpdHkudG9rZW5fc3RvcmFnZScpLAogICAgICAgICAgICAgICAgc2VydmljZSgnc2VjdXJpdHkuYWNjZXNzLmRlY2lzaW9uX21hbmFnZXInKSwKICAgICAgICAgICAgXSkKICAgICAgICAtPmFsaWFzKEF1dGhvcml6YXRpb25DaGVja2VySW50ZXJmYWNlOjpjbGFzcywgJ3NlY3VyaXR5LmF1dGhvcml6YXRpb25fY2hlY2tlcicpCgogICAgICAgIC0+c2V0KCdzZWN1cml0eS50b2tlbl9zdG9yYWdlJywgVXNhZ2VUcmFja2luZ1Rva2VuU3RvcmFnZTo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZWN1cml0eS51bnRyYWNrZWRfdG9rZW5fc3RvcmFnZScpLAogICAgICAgICAgICAgICAgc2VydmljZV9sb2NhdG9yKFsKICAgICAgICAgICAgICAgICAgICAncmVxdWVzdF9zdGFjaycgPT4gc2VydmljZSgncmVxdWVzdF9zdGFjaycpLAogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pCiAgICAgICAgICAgIC0+dGFnKCdrZXJuZWwucmVzZXQnLCBbJ21ldGhvZCcgPT4gJ2Rpc2FibGVVc2FnZVRyYWNraW5nJ10pCiAgICAgICAgICAgIC0+dGFnKCdrZXJuZWwucmVzZXQnLCBbJ21ldGhvZCcgPT4gJ3NldFRva2VuJ10pCiAgICAgICAgLT5hbGlhcyhUb2tlblN0b3JhZ2VJbnRlcmZhY2U6OmNsYXNzLCAnc2VjdXJpdHkudG9rZW5fc3RvcmFnZScpCgogICAgICAgIC0+c2V0KCdzZWN1cml0eS51bnRyYWNrZWRfdG9rZW5fc3RvcmFnZScsIFRva2VuU3RvcmFnZTo6Y2xhc3MpCgogICAgICAgIC0+c2V0KCdzZWN1cml0eS5oZWxwZXInLCBTZWN1cml0eTo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlX2xvY2F0b3IoWwogICAgICAgICAgICAgICAgICAgICdzZWN1cml0eS50b2tlbl9zdG9yYWdlJyA9PiBzZXJ2aWNlKCdzZWN1cml0eS50b2tlbl9zdG9yYWdlJyksCiAgICAgICAgICAgICAgICAgICAgJ3NlY3VyaXR5LmF1dGhvcml6YXRpb25fY2hlY2tlcicgPT4gc2VydmljZSgnc2VjdXJpdHkuYXV0aG9yaXphdGlvbl9jaGVja2VyJyksCiAgICAgICAgICAgICAgICAgICAgJ3NlY3VyaXR5LnVzZXJfYXV0aGVudGljYXRvcicgPT4gc2VydmljZSgnc2VjdXJpdHkudXNlcl9hdXRoZW50aWNhdG9yJyktPmlnbm9yZU9uSW52YWxpZCgpLAogICAgICAgICAgICAgICAgICAgICdyZXF1ZXN0X3N0YWNrJyA9PiBzZXJ2aWNlKCdyZXF1ZXN0X3N0YWNrJyksCiAgICAgICAgICAgICAgICAgICAgJ3NlY3VyaXR5LmZpcmV3YWxsLm1hcCcgPT4gc2VydmljZSgnc2VjdXJpdHkuZmlyZXdhbGwubWFwJyksCiAgICAgICAgICAgICAgICAgICAgJ3NlY3VyaXR5LnVzZXJfY2hlY2tlcicgPT4gc2VydmljZSgnc2VjdXJpdHkudXNlcl9jaGVja2VyJyksCiAgICAgICAgICAgICAgICAgICAgJ3NlY3VyaXR5LmZpcmV3YWxsLmV2ZW50X2Rpc3BhdGNoZXJfbG9jYXRvcicgPT4gc2VydmljZSgnc2VjdXJpdHkuZmlyZXdhbGwuZXZlbnRfZGlzcGF0Y2hlcl9sb2NhdG9yJyksCiAgICAgICAgICAgICAgICAgICAgJ3NlY3VyaXR5LmNzcmYudG9rZW5fbWFuYWdlcicgPT4gc2VydmljZSgnc2VjdXJpdHkuY3NyZi50b2tlbl9tYW5hZ2VyJyktPmlnbm9yZU9uSW52YWxpZCgpLAogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ2F1dGhlbnRpY2F0b3JzJyksCiAgICAgICAgICAgIF0pCiAgICAgICAgLT5hbGlhcyhTZWN1cml0eTo6Y2xhc3MsICdzZWN1cml0eS5oZWxwZXInKQogICAgICAgIC0+YWxpYXMoTGVnYWN5U2VjdXJpdHk6OmNsYXNzLCAnc2VjdXJpdHkuaGVscGVyJykKICAgICAgICAgICAgLT5kZXByZWNhdGUoJ3N5bWZvbnkvc2VjdXJpdHktYnVuZGxlJywgJzYuMicsICdUaGUgIiVhbGlhc19pZCUiIHNlcnZpY2UgYWxpYXMgaXMgZGVwcmVjYXRlZCwgdXNlICInLlNlY3VyaXR5OjpjbGFzcy4nIiBpbnN0ZWFkLicpCgogICAgICAgIC0+c2V0KCdzZWN1cml0eS51c2VyX3ZhbHVlX3Jlc29sdmVyJywgVXNlclZhbHVlUmVzb2x2ZXI6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgc2VydmljZSgnc2VjdXJpdHkudG9rZW5fc3RvcmFnZScpLAogICAgICAgICAgICBdKQogICAgICAgICAgICAtPnRhZygnY29udHJvbGxlci5hcmd1bWVudF92YWx1ZV9yZXNvbHZlcicsIFsncHJpb3JpdHknID0+IDEyMF0pCgogICAgICAgIC8vIEF1dGhlbnRpY2F0aW9uIHJlbGF0ZWQgc2VydmljZXMKICAgICAgICAtPnNldCgnc2VjdXJpdHkuYXV0aGVudGljYXRpb24udHJ1c3RfcmVzb2x2ZXInLCBBdXRoZW50aWNhdGlvblRydXN0UmVzb2x2ZXI6OmNsYXNzKQoKICAgICAgICAtPnNldCgnc2VjdXJpdHkuYXV0aGVudGljYXRpb24uc2Vzc2lvbl9zdHJhdGVneScsIFNlc3Npb25BdXRoZW50aWNhdGlvblN0cmF0ZWd5OjpjbGFzcykKICAgICAgICAgICAgLT5hcmdzKFtwYXJhbSgnc2VjdXJpdHkuYXV0aGVudGljYXRpb24uc2Vzc2lvbl9zdHJhdGVneS5zdHJhdGVneScpXSkKICAgICAgICAtPmFsaWFzKFNlc3Npb25BdXRoZW50aWNhdGlvblN0cmF0ZWd5SW50ZXJmYWNlOjpjbGFzcywgJ3NlY3VyaXR5LmF1dGhlbnRpY2F0aW9uLnNlc3Npb25fc3RyYXRlZ3knKQoKICAgICAgICAtPnNldCgnc2VjdXJpdHkuYXV0aGVudGljYXRpb24uc2Vzc2lvbl9zdHJhdGVneV9ub29wJywgU2Vzc2lvbkF1dGhlbnRpY2F0aW9uU3RyYXRlZ3k6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoWydub25lJ10pCgogICAgICAgIC0+c2V0KCdzZWN1cml0eS51c2VyX2NoZWNrZXInLCBJbk1lbW9yeVVzZXJDaGVja2VyOjpjbGFzcykKCiAgICAgICAgLT5zZXQoJ3NlY3VyaXR5LmV4cHJlc3Npb25fbGFuZ3VhZ2UnLCBFeHByZXNzaW9uTGFuZ3VhZ2U6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoW3NlcnZpY2UoJ2NhY2hlLnNlY3VyaXR5X2V4cHJlc3Npb25fbGFuZ3VhZ2UnKS0+bnVsbE9uSW52YWxpZCgpXSkKCiAgICAgICAgLT5zZXQoJ3NlY3VyaXR5LmF1dGhlbnRpY2F0aW9uX3V0aWxzJywgQXV0aGVudGljYXRpb25VdGlsczo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbc2VydmljZSgncmVxdWVzdF9zdGFjaycpXSkKICAgICAgICAtPmFsaWFzKEF1dGhlbnRpY2F0aW9uVXRpbHM6OmNsYXNzLCAnc2VjdXJpdHkuYXV0aGVudGljYXRpb25fdXRpbHMnKQoKICAgICAgICAvLyBBdXRob3JpemF0aW9uIHJlbGF0ZWQgc2VydmljZXMKICAgICAgICAtPnNldCgnc2VjdXJpdHkuYWNjZXNzLmRlY2lzaW9uX21hbmFnZXInLCBBY2Nlc3NEZWNpc2lvbk1hbmFnZXI6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoW1tdXSkKICAgICAgICAtPmFsaWFzKEFjY2Vzc0RlY2lzaW9uTWFuYWdlckludGVyZmFjZTo6Y2xhc3MsICdzZWN1cml0eS5hY2Nlc3MuZGVjaXNpb25fbWFuYWdlcicpCgogICAgICAgIC0+c2V0KCdzZWN1cml0eS5yb2xlX2hpZXJhcmNoeScsIFJvbGVIaWVyYXJjaHk6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoW3BhcmFtKCdzZWN1cml0eS5yb2xlX2hpZXJhcmNoeS5yb2xlcycpXSkKICAgICAgICAtPmFsaWFzKFJvbGVIaWVyYXJjaHlJbnRlcmZhY2U6OmNsYXNzLCAnc2VjdXJpdHkucm9sZV9oaWVyYXJjaHknKQoKICAgICAgICAvLyBTZWN1cml0eSBWb3RlcnMKICAgICAgICAtPnNldCgnc2VjdXJpdHkuYWNjZXNzLnNpbXBsZV9yb2xlX3ZvdGVyJywgUm9sZVZvdGVyOjpjbGFzcykKICAgICAgICAgICAgLT50YWcoJ3NlY3VyaXR5LnZvdGVyJywgWydwcmlvcml0eScgPT4gMjQ1XSkKCiAgICAgICAgLT5zZXQoJ3NlY3VyaXR5LmFjY2Vzcy5hdXRoZW50aWNhdGVkX3ZvdGVyJywgQXV0aGVudGljYXRlZFZvdGVyOjpjbGFzcykKICAgICAgICAgICAgLT5hcmdzKFtzZXJ2aWNlKCdzZWN1cml0eS5hdXRoZW50aWNhdGlvbi50cnVzdF9yZXNvbHZlcicpXSkKICAgICAgICAgICAgLT50YWcoJ3NlY3VyaXR5LnZvdGVyJywgWydwcmlvcml0eScgPT4gMjUwXSkKCiAgICAgICAgLT5zZXQoJ3NlY3VyaXR5LmFjY2Vzcy5yb2xlX2hpZXJhcmNoeV92b3RlcicsIFJvbGVIaWVyYXJjaHlWb3Rlcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbc2VydmljZSgnc2VjdXJpdHkucm9sZV9oaWVyYXJjaHknKV0pCiAgICAgICAgICAgIC0+dGFnKCdzZWN1cml0eS52b3RlcicsIFsncHJpb3JpdHknID0+IDI0NV0pCgogICAgICAgIC0+c2V0KCdzZWN1cml0eS5hY2Nlc3MuZXhwcmVzc2lvbl92b3RlcicsIEV4cHJlc3Npb25Wb3Rlcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZWN1cml0eS5leHByZXNzaW9uX2xhbmd1YWdlJyksCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZWN1cml0eS5hdXRoZW50aWNhdGlvbi50cnVzdF9yZXNvbHZlcicpLAogICAgICAgICAgICAgICAgc2VydmljZSgnc2VjdXJpdHkuYXV0aG9yaXphdGlvbl9jaGVja2VyJyksCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZWN1cml0eS5yb2xlX2hpZXJhcmNoeScpLT5udWxsT25JbnZhbGlkKCksCiAgICAgICAgICAgIF0pCiAgICAgICAgICAgIC0+dGFnKCdzZWN1cml0eS52b3RlcicsIFsncHJpb3JpdHknID0+IDI0NV0pCgogICAgICAgIC0+c2V0KCdzZWN1cml0eS5pbXBlcnNvbmF0ZV91cmxfZ2VuZXJhdG9yJywgSW1wZXJzb25hdGVVcmxHZW5lcmF0b3I6OmNsYXNzKQogICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgIHNlcnZpY2UoJ3JlcXVlc3Rfc3RhY2snKSwKICAgICAgICAgICAgc2VydmljZSgnc2VjdXJpdHkuZmlyZXdhbGwubWFwJyksCiAgICAgICAgICAgIHNlcnZpY2UoJ3NlY3VyaXR5LnRva2VuX3N0b3JhZ2UnKSwKICAgICAgICBdKQoKICAgICAgICAvLyBGaXJld2FsbCByZWxhdGVkIHNlcnZpY2VzCiAgICAgICAgLT5zZXQoJ3NlY3VyaXR5LmZpcmV3YWxsJywgRmlyZXdhbGxMaXN0ZW5lcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZWN1cml0eS5maXJld2FsbC5tYXAnKSwKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ2V2ZW50X2Rpc3BhdGNoZXInKSwKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3NlY3VyaXR5LmxvZ291dF91cmxfZ2VuZXJhdG9yJyksCiAgICAgICAgICAgIF0pCiAgICAgICAgICAgIC0+dGFnKCdrZXJuZWwuZXZlbnRfc3Vic2NyaWJlcicpCiAgICAgICAgLT5hbGlhcyhGaXJld2FsbDo6Y2xhc3MsICdzZWN1cml0eS5maXJld2FsbCcpCgogICAgICAgIC0+c2V0KCdzZWN1cml0eS5maXJld2FsbC5tYXAnLCBGaXJld2FsbE1hcDo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ0ZpcmV3YWxsIGNvbnRleHQgbG9jYXRvcicpLAogICAgICAgICAgICAgICAgYWJzdHJhY3RfYXJnKCdSZXF1ZXN0IG1hdGNoZXJzJyksCiAgICAgICAgICAgIF0pCiAgICAgICAgLT5hbGlhcyhGaXJld2FsbE1hcEludGVyZmFjZTo6Y2xhc3MsICdzZWN1cml0eS5maXJld2FsbC5tYXAnKQoKICAgICAgICAtPnNldCgnc2VjdXJpdHkuZmlyZXdhbGwuY29udGV4dCcsIEZpcmV3YWxsQ29udGV4dDo6Y2xhc3MpCiAgICAgICAgICAgIC0+YWJzdHJhY3QoKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgW10sCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZWN1cml0eS5leGNlcHRpb25fbGlzdGVuZXInKSwKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygnTG9nb3V0TGlzdGVuZXInKSwKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygnRmlyZXdhbGxDb25maWcnKSwKICAgICAgICAgICAgXSkKCiAgICAgICAgLT5zZXQoJ3NlY3VyaXR5LmZpcmV3YWxsLmxhenlfY29udGV4dCcsIExhenlGaXJld2FsbENvbnRleHQ6OmNsYXNzKQogICAgICAgICAgICAtPmFic3RyYWN0KCkKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIFtdLAogICAgICAgICAgICAgICAgc2VydmljZSgnc2VjdXJpdHkuZXhjZXB0aW9uX2xpc3RlbmVyJyksCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ0xvZ291dExpc3RlbmVyJyksCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ0ZpcmV3YWxsQ29uZmlnJyksCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZWN1cml0eS51bnRyYWNrZWRfdG9rZW5fc3RvcmFnZScpLAogICAgICAgICAgICBdKQoKICAgICAgICAtPnNldCgnc2VjdXJpdHkuZmlyZXdhbGwuY29uZmlnJywgRmlyZXdhbGxDb25maWc6OmNsYXNzKQogICAgICAgICAgICAtPmFic3RyYWN0KCkKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygnbmFtZScpLAogICAgICAgICAgICAgICAgYWJzdHJhY3RfYXJnKCd1c2VyX2NoZWNrZXInKSwKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygncmVxdWVzdF9tYXRjaGVyJyksCiAgICAgICAgICAgICAgICBmYWxzZSwgLy8gc2VjdXJpdHkgZW5hYmxlZAogICAgICAgICAgICAgICAgZmFsc2UsIC8vIHN0YXRlbGVzcwogICAgICAgICAgICAgICAgbnVsbCwKICAgICAgICAgICAgICAgIG51bGwsCiAgICAgICAgICAgICAgICBudWxsLAogICAgICAgICAgICAgICAgbnVsbCwKICAgICAgICAgICAgICAgIG51bGwsCiAgICAgICAgICAgICAgICBbXSwgLy8gbGlzdGVuZXJzCiAgICAgICAgICAgICAgICBudWxsLCAvLyBzd2l0Y2hfdXNlcgogICAgICAgICAgICAgICAgbnVsbCwgLy8gbG9nb3V0CiAgICAgICAgICAgIF0pCgogICAgICAgIC0+c2V0KCdzZWN1cml0eS5sb2dvdXRfdXJsX2dlbmVyYXRvcicsIExvZ291dFVybEdlbmVyYXRvcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdyZXF1ZXN0X3N0YWNrJyktPm51bGxPbkludmFsaWQoKSwKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3JvdXRlcicpLT5udWxsT25JbnZhbGlkKCksCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZWN1cml0eS50b2tlbl9zdG9yYWdlJyktPm51bGxPbkludmFsaWQoKSwKICAgICAgICAgICAgXSkKCiAgICAgICAgLy8gUHJvdmlzaW9uaW5nCiAgICAgICAgLT5zZXQoJ3NlY3VyaXR5LnVzZXIucHJvdmlkZXIubWlzc2luZycsIE1pc3NpbmdVc2VyUHJvdmlkZXI6OmNsYXNzKQogICAgICAgICAgICAtPmFic3RyYWN0KCkKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygnZmlyZXdhbGwnKSwKICAgICAgICAgICAgXSkKCiAgICAgICAgLT5zZXQoJ3NlY3VyaXR5LnVzZXIucHJvdmlkZXIuaW5fbWVtb3J5JywgSW5NZW1vcnlVc2VyUHJvdmlkZXI6OmNsYXNzKQogICAgICAgICAgICAtPmFic3RyYWN0KCkKCiAgICAgICAgLT5zZXQoJ3NlY3VyaXR5LnVzZXIucHJvdmlkZXIubGRhcCcsIExkYXBVc2VyUHJvdmlkZXI6OmNsYXNzKQogICAgICAgICAgICAtPmFic3RyYWN0KCkKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygnc2VjdXJpdHkubGRhcC5sZGFwJyksCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ2Jhc2UgZG4nKSwKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygnc2VhcmNoIGRuJyksCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ3NlYXJjaCBwYXNzd29yZCcpLAogICAgICAgICAgICAgICAgYWJzdHJhY3RfYXJnKCdkZWZhdWx0X3JvbGVzJyksCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ3VpZCBrZXknKSwKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygnZmlsdGVyJyksCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ3Bhc3N3b3JkX2F0dHJpYnV0ZScpLAogICAgICAgICAgICAgICAgYWJzdHJhY3RfYXJnKCdleHRyYV9maWVsZHMgKGVtYWlsIGV0YyknKSwKICAgICAgICAgICAgXSkKCiAgICAgICAgLT5zZXQoJ3NlY3VyaXR5LnVzZXIucHJvdmlkZXIuY2hhaW4nLCBDaGFpblVzZXJQcm92aWRlcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YWJzdHJhY3QoKQoKICAgICAgICAtPnNldCgnc2VjdXJpdHkuaHR0cF91dGlscycsIEh0dHBVdGlsczo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdyb3V0ZXInKS0+bnVsbE9uSW52YWxpZCgpLAogICAgICAgICAgICAgICAgc2VydmljZSgncm91dGVyJyktPm51bGxPbkludmFsaWQoKSwKICAgICAgICAgICAgXSkKICAgICAgICAtPmFsaWFzKEh0dHBVdGlsczo6Y2xhc3MsICdzZWN1cml0eS5odHRwX3V0aWxzJykKCiAgICAgICAgLy8gVmFsaWRhdG9yCiAgICAgICAgLT5zZXQoJ3NlY3VyaXR5LnZhbGlkYXRvci51c2VyX3Bhc3N3b3JkJywgVXNlclBhc3N3b3JkVmFsaWRhdG9yOjpjbGFzcykKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3NlY3VyaXR5LnRva2VuX3N0b3JhZ2UnKSwKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3NlY3VyaXR5LnBhc3N3b3JkX2hhc2hlcl9mYWN0b3J5JyksCiAgICAgICAgICAgIF0pCiAgICAgICAgICAgIC0+dGFnKCd2YWxpZGF0b3IuY29uc3RyYWludF92YWxpZGF0b3InLCBbJ2FsaWFzJyA9PiAnc2VjdXJpdHkudmFsaWRhdG9yLnVzZXJfcGFzc3dvcmQnXSkKCiAgICAgICAgLy8gQ2FjaGUKICAgICAgICAtPnNldCgnY2FjaGUuc2VjdXJpdHlfZXhwcmVzc2lvbl9sYW5ndWFnZScpCiAgICAgICAgICAgIC0+cGFyZW50KCdjYWNoZS5zeXN0ZW0nKQogICAgICAgICAgICAtPnByaXZhdGUoKQogICAgICAgICAgICAtPnRhZygnY2FjaGUucG9vbCcpCgogICAgICAgIC8vIENhY2hlIFdhcm1lcnMKICAgICAgICAtPnNldCgnc2VjdXJpdHkuY2FjaGVfd2FybWVyLmV4cHJlc3Npb24nLCBFeHByZXNzaW9uQ2FjaGVXYXJtZXI6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgW10sCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZWN1cml0eS5leHByZXNzaW9uX2xhbmd1YWdlJyksCiAgICAgICAgICAgIF0pCiAgICAgICAgICAgIC0+dGFnKCdrZXJuZWwuY2FjaGVfd2FybWVyJykKCiAgICAgICAgLT5zZXQoJ2NvbnRyb2xsZXIuaXNfZ3JhbnRlZF9hdHRyaWJ1dGVfbGlzdGVuZXInLCBJc0dyYW50ZWRBdHRyaWJ1dGVMaXN0ZW5lcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZWN1cml0eS5hdXRob3JpemF0aW9uX2NoZWNrZXInKSwKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3NlY3VyaXR5LmlzX2dyYW50ZWRfYXR0cmlidXRlX2V4cHJlc3Npb25fbGFuZ3VhZ2UnKS0+bnVsbE9uSW52YWxpZCgpLAogICAgICAgICAgICBdKQogICAgICAgICAgICAtPnRhZygna2VybmVsLmV2ZW50X3N1YnNjcmliZXInKQoKICAgICAgICAtPnNldCgnc2VjdXJpdHkuaXNfZ3JhbnRlZF9hdHRyaWJ1dGVfZXhwcmVzc2lvbl9sYW5ndWFnZScsIEJhc2VFeHByZXNzaW9uTGFuZ3VhZ2U6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoW3NlcnZpY2UoJ2NhY2hlLnNlY3VyaXR5X2lzX2dyYW50ZWRfYXR0cmlidXRlX2V4cHJlc3Npb25fbGFuZ3VhZ2UnKS0+bnVsbE9uSW52YWxpZCgpXSkKCiAgICAgICAgLT5zZXQoJ2NhY2hlLnNlY3VyaXR5X2lzX2dyYW50ZWRfYXR0cmlidXRlX2V4cHJlc3Npb25fbGFuZ3VhZ2UnKQogICAgICAgICAgICAtPnBhcmVudCgnY2FjaGUuc3lzdGVtJykKICAgICAgICAgICAgLT50YWcoJ2NhY2hlLnBvb2wnKQogICAgOwp9OwoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YToxOntzOjU4OiJcU3ltZm9ueVxDb21wb25lbnRcRGVwZW5kZW5jeUluamVjdGlvblxMb2FkZXJcQ29uZmlndXJhdG9yIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTg6IlxTeW1mb255XENvbXBvbmVudFxEZXBlbmRlbmN5SW5qZWN0aW9uXExvYWRlclxDb25maWd1cmF0b3IiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMjoiQ29uZmlndXJhdG9yIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";